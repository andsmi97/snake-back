{"version":3,"sources":["constants.js","Canvas.js","keycodes.js","socket.js","App.js","reportWebVitals.js","index.js"],"names":["DIRECTIONS","GAME_STATE","Canvas","gameState","props","canvasRef","useRef","useState","ctx","setCtx","useEffect","innerCtx","current","getContext","state","clearRect","canvas","width","height","circle","Path2D","arc","food","x","y","PLAYER_SIZE","fillStyle","fill","forEach","player","rectangle","positions","position","color","rect","renderGivenState","ref","id","keyCodes","backspace","tab","enter","shift","ctrl","alt","pauseBreak","capsLock","escape","pageUp","Space","pageDown","end","home","arrowLeft","arrowUp","arrowRight","arrowDown","printScreen","insert","delete","0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","z","leftWindowKey","rightWindowKey","selectKey","numpad0","numpad1","numpad2","numpad3","numpad4","numpad5","numpad6","numpad7","numpad8","numpad9","multiply","add","subtract","decimalPoint","divide","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","numLock","scrollLock","MyComputer","MyCalculator","semiColon","equalSign","comma","dash","period","forwardSlash","openBracket","backSlash","closeBraket","singleQuote","socket","io","initialState","time","gameStatus","winner","currentPoints","direction","speed","player2","App","setState","setCurrentPlayer","on","message","seed","removeListener","startGame","emit","Math","random","pauseGame","continueGame","className","handleKeys","onKeyEvent","key","keyCode","keys","handleEventType","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.325cc972.chunk.js","sourcesContent":["export const RIGHT_BORDER = 250;\r\nexport const BOTTOM_BORDER = 250;\r\nexport const BORDER_SIZE = 250;\r\nexport const TOP_BORDER = 0;\r\nexport const LEFT_BORDER = 0;\r\nexport const PLAYER_SIZE = 10;\r\nexport const DIRECTIONS = {\r\n  LEFT: \"LEFT\",\r\n  RIGHT: \"RIGHT\",\r\n  UP: \"UP\",\r\n  DOWN: \"DOWN\",\r\n};\r\nexport const GAME_STATE = {\r\n  PLAY: \"PLAY\",\r\n  PAUSE: \"PAUSE\",\r\n  STOP: \"STOP\",\r\n  END: \"END\",\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { PLAYER_SIZE } from \"./constants\";\r\n\r\nconst Canvas = ({ gameState, ...props }) => {\r\n  const canvasRef = useRef(null);\r\n  const [ctx, setCtx] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const innerCtx = canvas.getContext(\"2d\");\r\n    setCtx(innerCtx);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const renderGivenState = (state) => {\r\n      if (ctx) {\r\n        let players = [\"player\", \"player2\"];\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        let circle = new Path2D();\r\n        circle.arc(state.food.x, state.food.y, PLAYER_SIZE / 2, 0, 360);\r\n        ctx.fillStyle = \"red\";\r\n        ctx.fill(circle);\r\n\r\n        players.forEach((player) => {\r\n          let rectangle = new Path2D();\r\n          state[player].positions.forEach((position) => {\r\n            ctx.fillStyle = state[player].color;\r\n            rectangle.rect(position.x, position.y, PLAYER_SIZE, PLAYER_SIZE);\r\n            ctx.fill(rectangle);\r\n          });\r\n        });\r\n      }\r\n    };\r\n    renderGivenState(gameState);\r\n  }, [gameState, ctx]);\r\n\r\n  return (\r\n    <>\r\n      <canvas ref={canvasRef} {...props} id=\"canvas\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","const keyCodes = {\r\n  backspace: 8,\r\n  tab: 9,\r\n  enter: 13,\r\n  shift: 16,\r\n  ctrl: 17,\r\n  alt: 18,\r\n  pauseBreak: 19,\r\n  capsLock: 20,\r\n  escape: 27,\r\n  pageUp: 33,\r\n  Space: 32,\r\n  pageDown: 34,\r\n  end: 35,\r\n  home: 36,\r\n  arrowLeft: 37,\r\n  arrowUp: 38,\r\n  arrowRight: 39,\r\n  arrowDown: 40,\r\n  printScreen: 44,\r\n  insert: 45,\r\n  delete: 46,\r\n  0: 48,\r\n  1: 49,\r\n  2: 50,\r\n  3: 51,\r\n  4: 52,\r\n  5: 53,\r\n  6: 54,\r\n  7: 55,\r\n  8: 56,\r\n  9: 57,\r\n  a: 65,\r\n  b: 66,\r\n  c: 67,\r\n  d: 68,\r\n  e: 69,\r\n  f: 70,\r\n  g: 71,\r\n  h: 72,\r\n  i: 73,\r\n  j: 74,\r\n  k: 75,\r\n  l: 76,\r\n  m: 77,\r\n  n: 78,\r\n  o: 79,\r\n  p: 80,\r\n  q: 81,\r\n  r: 82,\r\n  s: 83,\r\n  t: 84,\r\n  u: 85,\r\n  v: 86,\r\n  w: 87,\r\n  x: 88,\r\n  y: 89,\r\n  z: 90,\r\n  leftWindowKey: 91,\r\n  rightWindowKey: 92,\r\n  selectKey: 93,\r\n  numpad0: 96,\r\n  numpad1: 97,\r\n  numpad2: 98,\r\n  numpad3: 99,\r\n  numpad4: 100,\r\n  numpad5: 101,\r\n  numpad6: 102,\r\n  numpad7: 103,\r\n  numpad8: 104,\r\n  numpad9: 105,\r\n  multiply: 106,\r\n  add: 107,\r\n  subtract: 109,\r\n  decimalPoint: 110,\r\n  divide: 111,\r\n  f1: 112,\r\n  f2: 113,\r\n  f3: 114,\r\n  f4: 115,\r\n  f5: 116,\r\n  f6: 117,\r\n  f7: 118,\r\n  f8: 119,\r\n  f9: 120,\r\n  f10: 121,\r\n  f11: 122,\r\n  f12: 123,\r\n  numLock: 144,\r\n  scrollLock: 145,\r\n  MyComputer: 182,\r\n  MyCalculator: 183,\r\n  semiColon: 186,\r\n  equalSign: 187,\r\n  comma: 188,\r\n  dash: 189,\r\n  period: 190,\r\n  forwardSlash: 191,\r\n  openBracket: 219,\r\n  backSlash: 220,\r\n  closeBraket: 221,\r\n  singleQuote: 222,\r\n};\r\n\r\nexport default keyCodes;\r\n","import io from \"socket.io-client\";\r\n// export const socket = io(\"http://localhost:8080\");\r\n// // const socket = io(\"https://95f18594e8f8.ngrok.io\");\r\n// const socket = io(\"http://localhost:8080\");\r\nexport const socket = io(\"https://snake-online.ru\");\r\n","import React, { useState, useEffect } from \"react\";\nimport Canvas from \"./Canvas\";\nimport keys from \"./keycodes.js\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport { DIRECTIONS, GAME_STATE, PLAYER_SIZE } from \"./constants\";\nimport { socket } from \"./socket\";\n\nconst initialState = {\n  time: 60,\n  gameStatus: GAME_STATE.STOP,\n  winner: \"none\", // one of \"none\", \"player\", \"player2\"\n  player: {\n    currentPoints: 0,\n    color: \"#2196f3\",\n    direction: DIRECTIONS.RIGHT,\n    speed: 10,\n    positions: [\n      {\n        x: 0,\n        y: 0,\n      },\n    ],\n  },\n  player2: {\n    currentPoints: 0,\n    color: \"#00b248\",\n    direction: DIRECTIONS.LEFT,\n    speed: 10,\n    positions: [\n      {\n        x: 250 - PLAYER_SIZE,\n        y: 250 - PLAYER_SIZE,\n      },\n    ],\n  },\n  food: {\n    x: 0,\n    y: 0,\n  },\n};\n\nconst App = () => {\n  const [state, setState] = useState(initialState);\n  const [player, setCurrentPlayer] = useState(\"player\");\n\n  //action emmiter\n  useEffect(() => {\n    socket.on(\"gameState\", (gameState) => {\n      //Add handlers here\n      setState(gameState);\n    });\n\n    socket.on(\"action\", ({ player, direction }) => {\n      // game.changeDirection(player, direction);\n    });\n\n    socket.on(\"start\", ({ message, seed }) => {\n      // console.log(message);\n      // setTimerStatus(true);\n      // game.startGame(seed);\n    });\n\n    socket.on(\"pause\", (message) => {\n      // console.log(message);\n      // setTimerStatus(false);\n      // game.pauseGame();\n    });\n\n    socket.on(\"reset\", (message) => {\n      // console.log(message);\n      // setTime(60);\n      // setTimerStatus(false);\n      // game.restartGame();\n    });\n\n    socket.on(\"continue\", (message) => {\n      // console.log(message);\n      // setTimerStatus(true);\n      // game.continueGame();\n    });\n\n    return () => {\n      socket.removeListener(\"action\");\n      socket.removeListener(\"gameStatus\");\n      socket.removeListener(\"start\");\n      socket.removeListener(\"pause\");\n      socket.removeListener(\"continue\");\n      socket.removeListener(\"reset\");\n    };\n  }, []);\n\n  const startGame = () => {\n    socket.emit(\"start\", { message: `${player} started`, seed: Math.random() });\n  };\n\n  const pauseGame = () => {\n    socket.emit(\"pause\", `${player} paused`);\n  };\n\n  const resetGame = () => {\n    socket.emit(\"reset\", `${player} reseted`);\n  };\n\n  const continueGame = () => {\n    socket.emit(\"continue\", `${player} continued`);\n  };\n\n  const keyHandler = (key, e) => {\n    switch (e.keyCode) {\n      case keys.w:\n      case keys.arrowUp:\n        socket.emit(\"action\", { player, direction: DIRECTIONS.UP });\n        break;\n      case keys.a:\n      case keys.arrowLeft:\n        socket.emit(\"action\", { player, direction: DIRECTIONS.LEFT });\n        break;\n      case keys.d:\n      case keys.arrowRight:\n        socket.emit(\"action\", { player, direction: DIRECTIONS.RIGHT });\n        break;\n      case keys.s:\n      case keys.arrowDown:\n        socket.emit(\"action\", { player, direction: DIRECTIONS.DOWN });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const renderActionButton = () => {\n    if (state.gameStatus === GAME_STATE.PLAY) {\n      return <button onClick={pauseGame}>Pause</button>;\n    } else if (state.gameStatus === GAME_STATE.PAUSE) {\n      return <button onClick={continueGame}>Continue</button>;\n    }\n    return <button onClick={startGame}>Start</button>;\n  };\n\n  const changePlayer = (e) => {\n    if (player === \"player\") {\n      setCurrentPlayer(\"player2\");\n    } else {\n      setCurrentPlayer(\"player\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <KeyboardEventHandler\n        handleKeys={[\"w\", \"a\", \"s\", \"d\"]}\n        onKeyEvent={keyHandler}\n        handleEventType=\"keydown\"\n      />\n      <div className=\"game-container\">\n        <div>\n          <p>{`${state.player.currentPoints} ${\n            player === \"player\" ? \"blue\" : \"green\"\n          } ${state.player2.currentPoints}`}</p>\n          <p>\n            Winner:{\" \"}\n            {state.winner !== \"none\"\n              ? state.winner === \"player\"\n                ? \"blue\"\n                : \"green\"\n              : \"\"}\n          </p>\n          <p>{state.time}</p>\n          {renderActionButton()}\n          <button onClick={resetGame}>Reset</button>\n          <button onClick={changePlayer}>changePlayer</button>\n        </div>\n        <div>\n          <Canvas gameState={state} width=\"250\" height=\"250\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}